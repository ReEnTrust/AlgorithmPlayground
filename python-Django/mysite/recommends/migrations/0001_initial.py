# Generated by Django 2.2.1 on 2019-05-16 10:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Similarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('object_site', models.PositiveIntegerField()),
                ('score', models.FloatField(blank=True, default=None, null=True)),
                ('related_object_id', models.PositiveIntegerField()),
                ('related_object_site', models.PositiveIntegerField()),
                ('object_ctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('related_object_ctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar', to='contenttypes.ContentType')),
            ],
            options={
                'unique_together': {('object_ctype', 'object_id', 'object_site', 'related_object_ctype', 'related_object_id', 'related_object_site')},
                'ordering': ['-score'],
                'verbose_name_plural': 'similarities',
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('object_site', models.PositiveIntegerField()),
                ('user', models.PositiveIntegerField()),
                ('score', models.FloatField(blank=True, default=None, null=True)),
                ('object_ctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'unique_together': {('object_ctype', 'object_id', 'user')},
                'ordering': ['-score'],
            },
        ),
    ]
